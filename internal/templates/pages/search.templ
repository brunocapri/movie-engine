package pages

import "github.com/brunocapri/movie-engine/internal/domain"
import "github.com/brunocapri/movie-engine/internal/templates/shared"
import "github.com/brunocapri/movie-engine/internal/utils"

templ Search(movies []domain.Movie) {
	@shared.Page() {
		<div class="flex flex-col items-start">
			<div class="text-white flex flex-col sm:flex-row rounded-lg overflow-visible">
				<div class="flex justify-center mr-5">
					<img class="sm:max-w-60 max-w-40 h-auto rounded-lg sm:drop-shadow-[0_35px_35px_rgba(0,0,0,0.75)] drop-shadow-[0_15px_15px_rgba(0,0,0,0.75)]" src={ movies[0].Poster } alt={ movies[0].Title + " poster" }/>
				</div>
				<div class="flex flex-col sm:mt-0 mt-5 justify-between">
					<div>
						<h2 class="text-2xl">{ movies[0].Title } ({ movies[0].Year })</h2>
						<p class="text-gray-400 mt-2">{ movies[0].Plot }</p>
						<p class="mt-4">{ movies[0].Director }</p>
					</div>
					<div class="flex items-start flex-col mt-4">
						<span class="flex items-center">
							if utils.Filter[domain.Rating](movies[0].Ratings, func(r domain.Rating) bool {return r.Source == "Rotten Tomatoes"}) != nil {
								<img src="dist/tomato.svg"/>
								<span class="ml-1">{ utils.Filter[domain.Rating](movies[0].Ratings, func(r domain.Rating) bool {return r.Source == "Rotten Tomatoes"})[0].Value }</span>
							}
						</span>
						<span class="flex items-center">
							<img src="dist/clock.svg"/>
							<span class="ml-1">{ movies[0].Runtime }</span>
						</span>
					</div>
				</div>
			</div>
			<div class="my-8 flex flex-col">
				<p class="text-xl text-white mb-3">Similar movies</p>
				<div class="flex flex-row">
					for i := 1; i < len(movies); i++ {
						<a class="cursor-pointer ml-5 first:ml-0" href={ templ.URL("/search?from=" + movies[i].Id.String()) }>
							<img class="w-32 h-46 object-cover rounded-lg drop-shadow-[0_15px_15px_rgba(0,0,0,0.5)]" src={ movies[i].Poster } alt="Movie Poster"/>
						</a>
					}
				</div>
			</div>
		</div>
	}
}
